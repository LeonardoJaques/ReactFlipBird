{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/leonardojaques/Desktop/WorkTable/flipBirdReact/flipbirdreactnativ/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Bird from \"./components/Bird\";\nimport Obstacles from \"./components/Obstacles\";\nexport default function App() {\n  var screenWidth = Dimensions.get('screen').width;\n  var screenHeight = Dimensions.get('screen').height;\n  var birdLeft = screenWidth / 2;\n\n  var _useState = useState(screenHeight / 2),\n      _useState2 = _slicedToArray(_useState, 2),\n      birdBottom = _useState2[0],\n      setBirdBottom = _useState2[1];\n\n  var gravity = 3;\n\n  var _useState3 = useState(screenWidth),\n      _useState4 = _slicedToArray(_useState3, 2),\n      obstaclesLeft = _useState4[0],\n      SetObstaclesLeft = _useState4[1];\n\n  var _useState5 = useState(screenWidth + screenWidth / 2),\n      _useState6 = _slicedToArray(_useState5, 2),\n      obstaclesLeftTwo = _useState6[0],\n      SetObstaclesLeftTwo = _useState6[1];\n\n  var obstacleWidth = 60;\n  var obstacleHeight = 300;\n  var gap = 200;\n  var gameTimerId;\n  var obstaclesLeftTimerId;\n  var obstaclesLeftTimerIdTwo;\n  useEffect(function () {\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(function () {\n        setBirdBottom(function (birdBottom) {\n          return birdBottom - gravity;\n        });\n      }, 30);\n      return function () {\n        clearInterval(gameTimerId);\n      };\n    }\n  }, [birdBottom]);\n  useEffect(function () {\n    if (obstaclesLeft > -obstacleWidth) {\n      obstaclesLeftTimerId = setInterval(function () {\n        SetObstaclesLeft(function (obstaclesLeft) {\n          return obstaclesLeft - 5;\n        });\n      }, 30);\n      return function () {\n        clearInterval(obstaclesLeftTimerId);\n      };\n    } else {\n      SetObstaclesLeft(screenWidth);\n    }\n  }, [obstaclesLeft]);\n  useEffect(function () {\n    if (obstaclesLeftTwo > -obstacleWidth) {\n      obstaclesLeftTimerIdTwo = setInterval(function () {\n        SetObstaclesLeft(function (obstaclesLeftTwo) {\n          return obstaclesLeftTwo - 5;\n        });\n      }, 30);\n      return function () {\n        clearInterval(obstaclesLeftTimerIdTwo);\n      };\n    } else {\n      SetObstaclesLeftTwo(screenWidth);\n    }\n  }, [obstaclesLeftTwo]);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Bird, {\n    birdBottom: birdBottom,\n    birdLeft: birdLeft\n  }), React.createElement(Obstacles, {\n    obstacleWidth: obstacleWidth,\n    obstacleLeft: obstaclesLeft,\n    obstacleHeight: obstacleHeight,\n    gap: gap\n  }), React.createElement(Obstacles, {\n    obstacleWidth: obstacleWidthTwo,\n    obstacleLeft: obstaclesLeftTwo,\n    obstacleHeight: obstacleHeightTwo,\n    gap: gap\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/leonardojaques/Desktop/WorkTable/flipBirdReact/flipbirdreactnativ/App.js"],"names":["React","useEffect","useState","Bird","Obstacles","App","screenWidth","Dimensions","get","width","screenHeight","height","birdLeft","birdBottom","setBirdBottom","gravity","obstaclesLeft","SetObstaclesLeft","obstaclesLeftTwo","SetObstaclesLeftTwo","obstacleWidth","obstacleHeight","gap","gameTimerId","obstaclesLeftTimerId","obstaclesLeftTimerIdTwo","setInterval","clearInterval","styles","container","obstacleWidthTwo","obstacleHeightTwo","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Dimensions, StyleSheet, Text, View } from 'react-native';\nimport Bird from './components/Bird';\nimport Obstacles from './components/Obstacles';\n\nexport default function App() {\n  const screenWidth = Dimensions.get('screen').width;\n  const screenHeight = Dimensions.get('screen').height;\n\n  const birdLeft = screenWidth / 2;\n  const [birdBottom, setBirdBottom] = useState(screenHeight / 2);\n  const gravity = 3;\n\n  const [obstaclesLeft, SetObstaclesLeft] = useState(screenWidth);\n  const [obstaclesLeftTwo, SetObstaclesLeftTwo] = useState(\n    screenWidth + screenWidth / 2\n  );\n\n  const obstacleWidth = 60;\n  const obstacleHeight = 300;\n  const gap = 200;\n\n  let gameTimerId;\n  let obstaclesLeftTimerId;\n  let obstaclesLeftTimerIdTwo;\n\n  //starting bird falling\n\n  useEffect(() => {\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom((birdBottom) => birdBottom - gravity);\n      }, 30);\n      return () => {\n        clearInterval(gameTimerId);\n      };\n    }\n    //if i dont have birdBottom as a dependecy, it wont stop\n  }, [birdBottom]);\n\n  // start first obstacles\n  useEffect(() => {\n    if (obstaclesLeft > -obstacleWidth) {\n      obstaclesLeftTimerId = setInterval(() => {\n        SetObstaclesLeft((obstaclesLeft) => obstaclesLeft - 5);\n      }, 30);\n      return () => {\n        clearInterval(obstaclesLeftTimerId);\n      };\n    } else {\n      SetObstaclesLeft(screenWidth);\n    }\n  }, [obstaclesLeft]);\n\n  // start second obstacles\n  useEffect(() => {\n    if (obstaclesLeftTwo > -obstacleWidth) {\n      obstaclesLeftTimerIdTwo = setInterval(() => {\n        SetObstaclesLeft((obstaclesLeftTwo) => obstaclesLeftTwo - 5);\n      }, 30);\n      return () => {\n        clearInterval(obstaclesLeftTimerIdTwo);\n      };\n    } else {\n      SetObstaclesLeftTwo(screenWidth);\n    }\n  }, [obstaclesLeftTwo]);\n\n  return (\n    <View style={styles.container}>\n      <Bird birdBottom={birdBottom} birdLeft={birdLeft} />\n      <Obstacles\n        obstacleWidth={obstacleWidth}\n        obstacleLeft={obstaclesLeft}\n        obstacleHeight={obstacleHeight}\n        gap={gap}\n      />\n      <Obstacles\n        obstacleWidth={obstacleWidthTwo}\n        obstacleLeft={obstaclesLeftTwo}\n        obstacleHeight={obstacleHeightTwo}\n        gap={gap}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}